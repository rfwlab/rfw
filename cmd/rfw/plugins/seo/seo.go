package seo

import (
	"encoding/json"
	"os"
	"strconv"
	"strings"

	"github.com/rfwlab/rfw/cmd/rfw/plugins"
)

type plugin struct{ file string }

func init() { plugins.Register(&plugin{}) }

func (p *plugin) Name() string { return "seo" }

func (p *plugin) Priority() int { return 0 }

func (p *plugin) PreBuild(raw json.RawMessage) error {
	var b strings.Builder
	b.WriteString("// Code generated by seo plugin. DO NOT EDIT.\n")
	b.WriteString("package main\n\n")
	b.WriteString("import \"github.com/rfwlab/rfw/v1/plugins/seo\"\n\n")
	b.WriteString("func init() {\n")
	b.WriteString("\t_ = seo.New().Build([]byte(" + strconv.Quote(string(raw)) + "))\n")
	b.WriteString("}\n")
	p.file = "rfw_seo.go"
	return os.WriteFile(p.file, []byte(b.String()), 0o644)
}

func (p *plugin) PostBuild(json.RawMessage) error {
	if p.file != "" {
		_ = os.Remove(p.file)
		p.file = ""
	}
	return nil
}

func (p *plugin) ShouldRebuild(string) bool { return false }

func (p *plugin) Build(json.RawMessage) error { return nil }
